{"ast":null,"code":"var _jsxFileName = \"/home/jim/Development/code/phase-2/Bot-bottle-code-challange/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useQueryBots from './useQueryBots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection({\n  addBotToArmy,\n  onUpdateBots\n}) {\n  _s();\n  // Map through the 'bots' array and create a list of bot elements\n  const deleteBot = botId => {\n    // Send a DELETE request to the server to delete the bot\n    fetch(`http://example.com/api/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok) {\n        const updatedBots = bots.filter(bot => bot.id !== botId);\n        onUpdateBots(updatedBots);\n      } else {\n        console.error('Failed to delete the bot');\n      }\n    }).catch(error => {\n      console.error('Error while deleting the bot:', error);\n    });\n  };\n  const {\n    bots\n  } = useQueryBots();\n  const botList = bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: bot.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.health\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.damage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.armor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.bot_class\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.catchphrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bot.avatar_url,\n      alt: \"bot avator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.created_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.updated_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addBotToArmy(bot),\n      children: \"Add to Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteBot(bot.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, bot.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: botList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"Qjvf0ItbLRiuM1g0tjzqhrWaoFs=\", false, function () {\n  return [useQueryBots];\n});\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useQueryBots","jsxDEV","_jsxDEV","BotCollection","addBotToArmy","onUpdateBots","_s","deleteBot","botId","fetch","method","then","response","ok","updatedBots","bots","filter","bot","id","console","error","catch","botList","map","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","health","damage","armor","bot_class","catchphrase","src","avatar_url","alt","created_at","updated_at","onClick","_c","$RefreshReg$"],"sources":["/home/jim/Development/code/phase-2/Bot-bottle-code-challange/src/components/BotCollection.js"],"sourcesContent":["import React from 'react';\nimport useQueryBots from './useQueryBots';\n\nfunction BotCollection({addBotToArmy ,onUpdateBots}) {\n  // Map through the 'bots' array and create a list of bot elements\n  const deleteBot = (botId) => {\n    // Send a DELETE request to the server to delete the bot\n    fetch(`http://example.com/api/bots/${botId}`, {\n      method: 'DELETE',\n    })\n      .then((response) => {\n        if (response.ok) {\n     \n          const updatedBots = bots.filter((bot) => bot.id !== botId);\n        \n          onUpdateBots(updatedBots);\n        } else {\n          console.error('Failed to delete the bot');\n        }\n      })\n      .catch((error) => {\n        console.error('Error while deleting the bot:', error);\n      });\n  }\n  const {bots}=useQueryBots()\n  const botList = bots.map((bot) => (\n    <div key={bot.id} className=\"bot-card\">\n      <h3>{bot.name}</h3>\n      <p>{bot.health}</p>\n      <p>{bot.damage}</p>\n      <p>{bot.armor}</p>\n      <p>{bot.bot_class}</p>\n      <p>{bot.catchphrase}</p>\n      <img src={bot.avatar_url} alt=\"bot avator\"/>\n      <p>{bot.created_at}</p>\n      <p>{bot.updated_at}</p>\n      <button onClick={() => addBotToArmy(bot)}>Add to Army</button>\n      <button onClick={() => deleteBot(bot.id)}>Delete</button>\n    </div>\n  ));\n\n  return (\n    <div className='bot-collection'>\n      {botList}\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}