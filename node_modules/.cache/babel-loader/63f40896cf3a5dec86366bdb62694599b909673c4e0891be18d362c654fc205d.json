{"ast":null,"code":"var _jsxFileName = \"/home/jim/Development/code/phase-2/Bot-bottle-code-challan/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useQueryBots from './useQueryBots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection({\n  addBotToArmy,\n  onUpdateBots,\n  onDeleteBots\n}) {\n  _s();\n  const {\n    bots,\n    handleDeleteBot\n  } = useQueryBots();\n\n  // Function to handle bot deletion\n  function handleDeleteClick(bot) {\n    // Send a DELETE request to the server to delete the bot\n    fetch(`http://localhost:3000/bots/${bot.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      // Call the handleDeleteBot function to update the state in the parent component\n      handleDeleteBot(bot);\n    }).catch(error => {\n      console.error('Error while deleting the bot:', error);\n    });\n  }\n\n  // Use useEffect to listen for changes in the bots array\n  useEffect(() => {\n    // Perform any necessary actions when the bots array changes\n  }, [bots]);\n  const botList = bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: bot.avatar_url,\n      alt: \"bot avatar\",\n      onClick: () => addBotToArmy(bot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: bot.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.health\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.damage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.armor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.bot_class\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.catchphrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.created_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.updated_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDeleteClick(bot),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \" \"]\n  }, bot.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: botList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"bQObUVqQHJ4Dq1SR74Dn+UsNVck=\", false, function () {\n  return [useQueryBots];\n});\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useQueryBots","jsxDEV","_jsxDEV","BotCollection","addBotToArmy","onUpdateBots","onDeleteBots","_s","bots","handleDeleteBot","handleDeleteClick","bot","fetch","id","method","headers","then","catch","error","console","botList","map","className","children","src","avatar_url","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","health","damage","armor","bot_class","catchphrase","created_at","updated_at","_c","$RefreshReg$"],"sources":["/home/jim/Development/code/phase-2/Bot-bottle-code-challan/src/components/BotCollection.js"],"sourcesContent":["\nimport React, { useEffect } from 'react';\nimport useQueryBots from './useQueryBots';\n\nfunction BotCollection({ addBotToArmy, onUpdateBots, onDeleteBots }) {\n  const { bots, handleDeleteBot } = useQueryBots();\n\n  // Function to handle bot deletion\n  function handleDeleteClick(bot) {\n    // Send a DELETE request to the server to delete the bot\n    fetch(`http://localhost:3000/bots/${bot.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(() => {\n        // Call the handleDeleteBot function to update the state in the parent component\n        handleDeleteBot(bot);\n      })\n      .catch((error) => {\n        console.error('Error while deleting the bot:', error);\n      });\n  }\n\n  // Use useEffect to listen for changes in the bots array\n  useEffect(() => {\n    // Perform any necessary actions when the bots array changes\n  }, [bots]);\n\n  const botList = bots.map((bot) => (\n    <div key={bot.id} className=\"bot-card\">\n      <img src={bot.avatar_url} alt=\"bot avatar\" onClick={() => addBotToArmy(bot)}/>\n      <h3>{bot.name}</h3>\n      <p>{bot.health}</p>\n      <p>{bot.damage}</p>\n      <p>{bot.armor}</p>\n      <p>{bot.bot_class}</p>\n      <p>{bot.catchphrase}</p>\n      <p>{bot.created_at}</p>\n      <p>{bot.updated_at}</p>\n      \n      <button onClick={() => handleDeleteClick(bot)}>Delete</button> {/* Pass 'bot' as a parameter */}\n    </div>\n  ));\n\n  return (\n    <div className=\"bot-collection\">\n      {botList}\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}